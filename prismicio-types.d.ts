// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

type HomeDocumentDataSlicesSlice = ClicksSlice | HeroSlice | FeaturesSlice;

type HomeDocumentDataSlices1Slice = never;

/**
 * Content for KeydoHome documents
 */
interface HomeDocumentData {
  /**
   * Slice Zone field in *KeydoHome*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: home.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<HomeDocumentDataSlicesSlice> /**
   * Meta Title field in *KeydoHome*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: home.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *KeydoHome*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: home.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *KeydoHome*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: home.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;

  /**
   * Slice Zone field in *KeydoHome*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: home.slices1[]
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices1: prismic.SliceZone<HomeDocumentDataSlices1Slice>;
}

/**
 * KeydoHome document from Prismic
 *
 * - **API ID**: `home`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomeDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<Simplify<HomeDocumentData>, "home", Lang>;

type SwitchDocumentDataSlicesSlice = never;

/**
 * Content for Switch documents
 */
interface SwitchDocumentData {
  /**
   * Name field in *Switch*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Name of Switch
   * - **API ID Path**: switch.name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  name: prismic.KeyTextField;

  /**
   * Color field in *Switch*
   *
   * - **Field Type**: Color
   * - **Placeholder**: *None*
   * - **API ID Path**: switch.color
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/color
   */
  color: prismic.ColorField;

  /**
   * `slices` field in *Switch*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: switch.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<SwitchDocumentDataSlicesSlice>;
}

/**
 * Switch document from Prismic
 *
 * - **API ID**: `switch`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SwitchDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<SwitchDocumentData>, "switch", Lang>;

export type AllDocumentTypes = HomeDocument | SwitchDocument;

/**
 * Item in *Clicks → Default → Primary → SwitchItem*
 */
export interface ClicksSliceDefaultPrimaryClicksitemsItem {
  /**
   * Switch field in *Clicks → Default → Primary → SwitchItem*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: clicks.default.primary.clicksitems[].switch
   * - **Documentation**: https://prismic.io/docs/fields/content-relationship
   */
  switch: ContentRelationshipFieldWithData<
    [{ id: "switch"; fields: ["name", "color"] }]
  >;
}

/**
 * Primary content in *Clicks → Default → Primary*
 */
export interface ClicksSliceDefaultPrimary {
  /**
   * Heading field in *Clicks → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: clicks.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * SwitchItem field in *Clicks → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: clicks.default.primary.clicksitems[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  clicksitems: prismic.GroupField<
    Simplify<ClicksSliceDefaultPrimaryClicksitemsItem>
  >;
}

/**
 * Default variation for Clicks Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ClicksSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ClicksSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Clicks*
 */
type ClicksSliceVariation = ClicksSliceDefault;

/**
 * Clicks Shared Slice
 *
 * - **API ID**: `clicks`
 * - **Description**: Clicks
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ClicksSlice = prismic.SharedSlice<"clicks", ClicksSliceVariation>;

/**
 * Item in *Features → Default → Primary → BentoItems*
 */
export interface FeaturesSliceDefaultPrimaryBentoitemsItem {
  /**
   * Image field in *Features → Default → Primary → BentoItems*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: features.default.primary.bentoitems[].image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * Subhead field in *Features → Default → Primary → BentoItems*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Features Name
   * - **API ID Path**: features.default.primary.bentoitems[].subhead
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  subhead: prismic.RichTextField;

  /**
   * size field in *Features → Default → Primary → BentoItems*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: small
   * - **API ID Path**: features.default.primary.bentoitems[].size
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  size: prismic.SelectField<"small" | "medium" | "large", "filled">;
}

/**
 * Primary content in *Features → Default → Primary*
 */
export interface FeaturesSliceDefaultPrimary {
  /**
   * Heading1 field in *Features → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Key-Do720 Features
   * - **API ID Path**: features.default.primary.heading1
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading1: prismic.RichTextField;

  /**
   * BentoItems field in *Features → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: features.default.primary.bentoitems[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  bentoitems: prismic.GroupField<
    Simplify<FeaturesSliceDefaultPrimaryBentoitemsItem>
  >;
}

/**
 * Default variation for Features Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type FeaturesSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<FeaturesSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Features*
 */
type FeaturesSliceVariation = FeaturesSliceDefault;

/**
 * Features Shared Slice
 *
 * - **API ID**: `features`
 * - **Description**: Features
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type FeaturesSlice = prismic.SharedSlice<
  "features",
  FeaturesSliceVariation
>;

/**
 * Primary content in *Hero → Default → Primary*
 */
export interface HeroSliceDefaultPrimary {
  /**
   * Heading field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * body field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.body
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  body: prismic.RichTextField;

  /**
   * Buy Button Text field in *Hero → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.buy_button_text
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  buy_button_text: prismic.KeyTextField;
}

/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Hero*
 */
type HeroSliceVariation = HeroSliceDefault;

/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: Hero
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSlice = prismic.SharedSlice<"hero", HeroSliceVariation>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      HomeDocument,
      HomeDocumentData,
      HomeDocumentDataSlicesSlice,
      HomeDocumentDataSlices1Slice,
      SwitchDocument,
      SwitchDocumentData,
      SwitchDocumentDataSlicesSlice,
      AllDocumentTypes,
      ClicksSlice,
      ClicksSliceDefaultPrimaryClicksitemsItem,
      ClicksSliceDefaultPrimary,
      ClicksSliceVariation,
      ClicksSliceDefault,
      FeaturesSlice,
      FeaturesSliceDefaultPrimaryBentoitemsItem,
      FeaturesSliceDefaultPrimary,
      FeaturesSliceVariation,
      FeaturesSliceDefault,
      HeroSlice,
      HeroSliceDefaultPrimary,
      HeroSliceVariation,
      HeroSliceDefault,
    };
  }
}
